This file serves as general instructions/additional guidance to each file in this repository

IsolatedLMC.py
This original code was written by Jordan Van Nest.  This modified version also finds isolated LMC type galaxies.
This finds LMC mass galaxies (the parameters can be modified within the code) which are not "near" a Milky Way
mass galaxy AND not "near" another LMC type galaxy.
This will ouput pickle files for Milky Way like halos and their satellites, large halos, as well as LMC type 
galaxies and their satellites.
As in Jordan's original code, you must pass a definition (1, 2, 3, or 4) as well as a value to use for the radius
('sim', or '300') in order to run. - See the code's comments for further explanation on each definition.
Note that in its most recent iteration the output logs were not working but this is not vital to the functionality
of the code itself.


LMC_Sats_Images_3.py
A special thanks to Anna is required of this code as she greatly helped me figure out how to properly image the halos.
This is my most recent iteration of this code.  This code saves an image of each LMC type halo from the
sim data using the pickle files generated from running IsolatedLMC.py  The host is circled in white (with a circle
equal to its virial radius), while satellites are circled in red (with circles equal to their virial radii).
Note that you may have to update the file path (in plt.savefig) depending on your system configuration as images are 
auto saved as this code runs.
Also note that this code can take quite some time to complete running.
This code is probably the one which could use the most optimization and cleaning.

satellite_counts.py
A simple code to count the number of satellites of the LMC type galaxies. You must pass the pickle file (specified
within the code itself).  The results are plotted as a simple histogram.


satellite_mass_dist_counts.py
Plots the distribution of masses of satellites of LMC Galaxies.  Must specific a pickle file within the code.
The results are plotted as a simple histogram


t90_hist.py
Creates a histogram of the distribution of "t90" values for the LMC sats.
"t90" is simply the time until 90% of the stars have been formed; it defaults to 14.5 Byr when a gal
Again, the pickle files for the LMC satellites must be passed within the code for this to function.


tidal_index_loop.py
This file calculates all the tidal indices over time for all the satellites.  In its most recent iteration, there is a
pdb.set_trace() executed at the end which will enable the user to stop and decide how to proceed.  In my case,
I ran some lines of code to save the dictionary as a pickle file.  Note that this code takes very long to run, so I suggest
saving as a pickle file.  My original pickle files can be found in this repo as well.


disrupted_sats_plotting.py
This file takes the tidal index dictionaries generated by running tidal_index_loop and uses those satellite halo IDs to
create a plot of the cumulative fractional star formation history vs. time.  Each line is color coded by that halo's mass.
Note that you can change the colar map within the code itself.  Note that some color bar lines are commented out in this 
iteration.  Depending on your goals, you may need to uncomment and modify some of these lines.


tidal_index_plots.py
This file takes the tidal index dictionaries generated by running tidal_index_loop.py and uses that data to create
histograms of the tidal indices.  A histogram of the means, medians, and present (z = 0) value can be created by running
this code.


Additional notes:
tidal_ind_data.pkl is the pickle file with the tidal indices for LMCs with only 1 sat
mult_sats.pkl is the pickle file for the tidal indices for LMCs with more than 1 sat.